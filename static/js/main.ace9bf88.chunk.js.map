{"version":3,"sources":["logo.svg","forum/components.js","lookup/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ForumComponent","props","textAreaRef","React","createRef","useState","newForum","setNewForum","className","onSubmit","event","preventDefault","newVal","current","value","tempNewForum","unshift","content","likes","id","ref","required","name","type","ForumList","forumsInit","setForumInit","forum","setForum","useEffect","final","concat","length","console","log","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","send","loadForum","alert","map","item","index","Forum","key","ActionBtn","action","setLikes","userLike","setUserLike","actionDisplay","display","onClick","App","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","appEl","document","getElementById","ReactDOM","render","forumEl","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,kC,+LCKpC,SAASC,EAAeC,GAC7B,IAAMC,EAAcC,IAAMC,YADU,EAEJC,mBAAS,IAFL,mBAE7BC,EAF6B,KAEnBC,EAFmB,KAepC,OAAO,yBAAKC,UAAWP,EAAMO,WAC3B,yBAAKA,UAAU,eACb,0BAAMC,SAdW,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAASV,EAAYW,QAAQC,MAC/BC,EAAY,YAAOT,GACvBS,EAAaC,QAAQ,CACnBC,QAASL,EACTM,MAAO,EACPC,GAAI,OAENZ,EAAYQ,GACZb,EAAYW,QAAQC,MAAQ,KAKxB,8BAAUM,IAAKlB,EAAamB,UAAU,EAAMb,UAAU,eAAec,KAAK,UAG1E,4BAAQC,KAAK,SAASf,UAAU,wBAAhC,WAGJ,kBAACgB,EAAD,CAAWlB,SAAUA,KAKlB,SAASkB,EAAUvB,GAAQ,IAAD,EACMI,mBAAS,IADf,mBACtBoB,EADsB,KACVC,EADU,OAEHrB,mBAAS,IAFN,mBAEtBsB,EAFsB,KAEfC,EAFe,KAqB7B,OAlBAC,qBAAU,WACR,IAAMC,EAAQ,YAAI7B,EAAMK,UAAUyB,OAAON,GACrCK,EAAME,SAAWL,EAAMK,SACzBJ,EAASE,GACTG,QAAQC,IAAIJ,MAEb,CAAC7B,EAAMK,SAAUqB,EAAOF,IAE3BI,qBAAU,YC7CP,SAAmBM,GACtB,IAAMC,EAAM,IAAIC,eAIhBD,EAAIE,aADiB,OAErBF,EAAIG,KAJW,MACH,qCAIZH,EAAII,OAAS,WACXL,EAASC,EAAIK,SAAUL,EAAIM,SAE7BN,EAAIO,QAAU,SAAUC,GACtBX,QAAQC,IAAIU,GACZT,EAAS,CAAC,QAAW,sBAAuB,MAE9CC,EAAIS,ODuCFC,EAPmB,SAACL,EAAUC,GACb,MAAXA,EACFhB,EAAae,GAEbM,MAAM,2BAIT,IACIpB,EAAMqB,KAAI,SAACC,EAAMC,GACtB,OAAO,kBAACC,EAAD,CAAOxB,MAAOsB,EAAMzC,UAAU,sCAAsC4C,IAAG,UAAKF,EAAL,mBAI7E,SAASG,EAAUpD,GAAQ,IACvB0B,EAAiB1B,EAAjB0B,MAAO2B,EAAUrD,EAAVqD,OADe,EAEHjD,mBAASsB,EAAMT,MAAQS,EAAMT,MAAQ,GAFlC,mBAEtBA,EAFsB,KAEfqC,EAFe,OAGGlD,qBAASsB,EAAM6B,UAHlB,mBAGtBA,EAHsB,KAGZC,EAHY,KAIvBjD,EAAYP,EAAMO,UAAYP,EAAMO,UAAY,yBAChDkD,EAAgBJ,EAAOK,QAAUL,EAAOK,QAAU,SAalDA,EAA0B,SAAhBL,EAAO/B,KAAP,UAA4BL,EAA5B,YAAqCwC,GAAkBA,EACvE,OAAQ,4BAAQlD,UAAWA,EAAWoD,QAblB,SAAClD,GACnBA,EAAMC,iBACc,SAAhB2C,EAAO/B,QACQ,IAAbiC,GACFD,EAASrC,EAAQ,GACjBuC,GAAY,KAEZF,EAASrC,EAAQ,GACjBuC,GAAY,OAK2CE,GAG1D,SAASR,EAAMlD,GAAQ,IACnB0B,EAAS1B,EAAT0B,MACDnB,EAAYP,EAAMO,UAAYP,EAAMO,UAAY,0BACtD,OAAO,yBAAKA,UAAWA,GACnB,2BAAImB,EAAMR,GAAV,MAAiBQ,EAAMV,SACvB,yBAAKT,UAAU,iBACb,kBAAC6C,EAAD,CAAW1B,MAAOA,EAAO2B,OAAQ,CAAC/B,KAAM,OAAQoC,QAAS,WACzD,kBAACN,EAAD,CAAW1B,MAAOA,EAAO2B,OAAQ,CAAC/B,KAAM,SAAUoC,QAAS,QEzDtDE,MAzBf,WAEE,OACE,yBAAKrD,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKsD,IAAKC,IAAMvD,UAAU,WAAWwD,IAAI,SACzC,mCACO,4CADP,wBAGA,6BACE,kBAAChE,EAAD,OAEF,uBACEQ,UAAU,WACVyD,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,kBCPYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXN,IAAMC,EAAQC,SAASC,eAAe,QAClCF,GACFG,IAASC,OAAO,kBAAC,EAAD,MAASJ,GAG3B,IAAMK,EAAUJ,SAASC,eAAe,YACpCG,GACFF,IAASC,OAAO,kBAAC7E,EAAD,MAAoB8E,GDqHhC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrD,QAAQqD,MAAMA,EAAMC,c","file":"static/js/main.ace9bf88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useEffect, useState} from 'react'; \r\n\r\nimport {loadForum} from '../lookup'\r\n\r\n//parent components\r\nexport function ForumComponent(props) {\r\n  const textAreaRef = React.createRef()\r\n  const [newForum, setNewForum] = useState([])\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    let tempNewForum = [...newForum]\r\n    tempNewForum.unshift({\r\n      content: newVal,\r\n      likes: 0,\r\n      id: 1234\r\n    })\r\n    setNewForum(tempNewForum)\r\n    textAreaRef.current.value = ''\r\n  }\r\n  return <div className={props.className}>\r\n    <div className='col-12 mb-3'>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea ref={textAreaRef} required={true} className='form-control' name='forum'>\r\n\r\n        </textarea>\r\n        <button type='submit' className='btn btn-primary my-3'>Share</button>\r\n      </form>\r\n      </div>\r\n    <ForumList newForum={newForum} />\r\n  </div>\r\n}\r\n\r\n// child components \r\nexport function ForumList(props) {\r\n    const [forumsInit, setForumInit] = useState([])\r\n    const [forum, setForum] = useState([])\r\n    useEffect(()=>{\r\n      const final = [...props.newForum].concat(forumsInit)\r\n      if (final.length !== forum.length) {\r\n        setForum(final)\r\n        console.log(final)\r\n      }\r\n    }, [props.newForum, forum, forumsInit])\r\n\r\n    useEffect(() => {\r\n      const myCallback = (response, status) => {\r\n        if (status === 200){\r\n          setForumInit(response)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n      }\r\n      loadForum(myCallback)\r\n    }, [])\r\n    return forum.map((item, index)=>{\r\n      return <Forum forum={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\r\n    })\r\n  }\r\n\r\nexport function ActionBtn(props) {\r\n    const {forum, action} = props\r\n    const [likes, setLikes] = useState(forum.likes ? forum.likes : 0)\r\n    const [userLike, setUserLike] = useState(forum.userLike ? true : false)\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      if (action.type === 'like') {\r\n        if (userLike === true) {\r\n          setLikes(likes - 1)\r\n          setUserLike(false)\r\n        } else {\r\n          setLikes(likes + 1)\r\n          setUserLike(true)\r\n        }\r\n      }\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return  <button className={className} onClick={handleClick}>{display}</button> \r\n}\r\n  \r\nexport function Forum(props) {\r\n    const {forum} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n        <p>{forum.id} - {forum.content}</p>\r\n        <div className='btn btn-group'>\r\n          <ActionBtn forum={forum} action={{type: \"like\", display: 'likes'}}/>\r\n          <ActionBtn forum={forum} action={{type: \"repost\", display: ''}}/>\r\n        </div>\r\n    </div>\r\n  }","export function loadForum(callback) {\r\n    const xhr = new XMLHttpRequest() //\r\n    const method = 'GET'\r\n    const url = 'http://localhost:8000/api/forums/' // localhost:/index\r\n    const responseType = \"json\"\r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function() {\r\n      callback(xhr.response, xhr.status)\r\n    }  \r\n    xhr.onerror = function (e) {\r\n      console.log(e)\r\n      callback({\"message\": \"There was an error\"}, 400)\r\n    }\r\n    xhr.send()\r\n  }","import React, {useEffect, useState}  from'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {ForumComponent} from './forum'\n\n\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <ForumComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ForumComponent} from './forum'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl)\n}\n\nconst forumEl = document.getElementById('forum-el')\nif (forumEl) {\n  ReactDOM.render(<ForumComponent />, forumEl)\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}